通过Docker部署的ffmpeg进行视频分割与合并
https://blog.csdn.net/fm0517/article/details/124963273
如何在较旧版本的docker中使用gpu
https://blog.csdn.net/weixin_43590796/article/details/134740906
【博客501】Nvidia docker runtime原理
https://blog.csdn.net/qq_43684922/article/details/127024933

系统版本号的查看
cat /proc/version
uname -a


https://tool.ip138.com/img2base64/

https://github.com/MyMonsterCat/RapidOcr-Java

https://blog.csdn.net/u012795439/article/details/135675005
https://blog.51cto.com/momo1226/10014819
配置https访问
openssl genrsa -out server.key 1024
openssl req -new -key server.key -out server.csr
openssl x509 -req -in server.csr -out server.crt -signkey server.key -days 3650

https://learn.microsoft.com/en-us/windows/wsl/install-manual
Downloading distributions

AndroidStudio升级Gradle到7+，compileSdkVersion 33+
https://www.cnblogs.com/tony-yang-flutter/p/18224017

android 读取assets文件下的资源 
https://blog.51cto.com/u_16213316/11184264

ncnn-android-squeezenet
https://github.com/nihui/ncnn-android-squeezenet

NCNN推理
https://blog.csdn.net/weixin_43999691/article/details/140629910

android studio 连接雷电模拟器故障排除
netstat -ano|findstr 5555
resmon 查看5555端口
任务管理器查看5555端口对应进程

adb devices
任务管理器查看 运行中的adb进程 为android studio sdk 提供


# 添加文件或目录，大于50M的都需要
git lfs track "preson/*"
git lfs track variables.data-00000-of-00001
# 提交
git add .
git commit -m "# 注释信息"
git push origin master

自定义桶配置
{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Effect": "Allow",
			"Principal": {
				"AWS": [
					"*"
				]
			},
			"Action": [
				"s3:GetObject",
				"s3:PutObject"
			],
			"Resource": [
				"arn:aws:s3:::3dgs/*"
			]
		}
	]
}


盘点|统计Android内存使用的方法有哪些？
https://www.jianshu.com/p/43956954e015

cn.hutool.core.collection.CollUtil#getFieldValues(java.lang.Iterable<?>, java.lang.String, java.lang.Class<T>)


ex.set_light_mode(true);

https://blog.csdn.net/2301_77171572/article/details/132329077

天机学堂
https://b11et3un53m.feishu.cn/wiki/R068wmzUtifYg5kEMP7c6EMTn9d
https://b11et3un53m.feishu.cn/wiki/wikcnrigEuKkRaba6YaZubSuINf

java.util.stream.Stream#collect(java.util.stream.Collector<? super T,A,R>)
java.util.stream.Collectors#toMap(java.util.function.Function<? super T,? extends K>, java.util.function.Function<? super T,? extends U>)


Vi
打开文件后，按 i 进入编辑模式
set nu " 设置显示行号
set showmode " 设置在命令行界面最下面显示当前模式等
set ruler " 在右下角显示光标所在的行数等信息
set autoindent " 设置每次单击Enter键后，光标移动到下一行时与上一行的起始字符对齐
syntax on " 即设置语法检测，当编辑C或者Shell脚本时，关键字会用特殊颜色显示

docker部署minio
docker run -d  --restart=always --name myminio -p 9000:9000   -p 9001:9001  -v /aisee_dataset/z30031511/data:/data  -v /aisee_dataset/z30031511/config:/root/.minio  -e MINIO_ROOT_USER=admin   -e MINIO_ROOT_PASSWORD=12345678   minio/minio server /data --console-address ":9001" 

系统版本号的查看

cat /proc/version
uname -a

python 连接配置SSL证书的Minio服务
https://blog.csdn.net/weixin_44331765/article/details/127731143
python minio client报[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certific
https://blog.csdn.net/NICK1211/article/details/126905215

NCNN清理模型
ncnn::Net* net = new ncnn::Net();

// 加载模型
if (net->load_param("model.param") == 0 && net->load_model("model.bin") == 0)
{
    // 清理资源
    net->clear();
}

delete net; // 销毁对象


ncnn::Net net;
net.clear();


JNI c++ 返回自定义的对象

#include <jni.h>
#include <string>

extern "C"
JNIEXPORT jobject JNICALL
Java_com_example_myapp_MainActivity_getMyObject(JNIEnv *env, jobject /* this */) {
    // 1. 找到 Java 类的引用
    jclass myObjectClass = env->FindClass("com/example/myapp/MyObject");
    if (!myObjectClass) {
        return nullptr; // 类未找到
    }

    // 2. 获取 Java 类的构造方法 ID
    jmethodID constructor = env->GetMethodID(myObjectClass, "<init>", "(ILjava/lang/String;)V");
    if (!constructor) {
        return nullptr; // 构造方法未找到
    }

    // 3. 构造参数
    jint id = 123;
    jstring name = env->NewStringUTF("My Custom Object");

    // 4. 创建 Java 对象
    jobject myObject = env->NewObject(myObjectClass, constructor, id, name);

    // 5. 释放局部引用（如果需要）
    env->DeleteLocalRef(name);

    // 6. 返回 Java 对象
    return myObject;
}


private native MyObject getMyObject();


public class MyObject {
    private int id;
    private String name;

    public MyObject(int id, String name) {
        this.id = id;
        this.name = name;
    }

    @Override
    public String toString() {
        return "MyObject{id=" + id + ", name='" + name + "'}";
    }
}

linux scp
scp -r root@10.244.137.74:/opt/ai_data/s00658774/mycodes/edgeyolo/images/failana0926/ ./

DynamicTableNameInnterInterceptor

Python
pip install --trusted-host mirrors.tools.huawei.com -i https://mirrors.tools.huawei.com/pypi/simple  paramiko
pip config set global.index-url http://mirrors.tools.huawei.com/pypi/simple
pip config set global.trusted-host mirrors.tools.huawei.com

端口映射
netsh interface portproxy show all
netsh interface portproxy add v4tov4 listenaddress=0.0.0.0 listenport=9001 connectaddress=172.19.92.225 connectport=9001
netsh interface portproxy del v4tov4 listenport=3000 listenaddress=0.0.0.0

统计
ls -l | grep "^-" | wc -l

1. 查看所有的端口占用情况
netstat -ano
2. 查看指定端口的占用情况
C:\>netstat -aon|findstr "9050"
3. 查看 PID 对应的进程
C:\>tasklist|findstr "2016"
4. 结束该进程
C:\>taskkill /f /t /im tor.exe

1. 使用lscpu命令：在终端中输入lscpu命令，即可查看系统中的CPU个数和其他相关信息。
lscpu
2. 使用nproc命令：在终端中输入nproc命令，即可查看系统中的CPU个数。
nproc
3. 查看/proc/cpuinfo文件：可以通过查看/proc/cpuinfo文件来获取有关系统CPU的详细信息，包括CPU个数、核心数等。
cat /proc/cpuinfo | grep "processor" | wc -l

com.github.benmanes.caffeine.cache.Cache
java.util.function.Function#identity
